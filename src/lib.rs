use core::f32::consts::PI;
use eg_seven_segment::SevenSegmentStyleBuilder;
use embedded_graphics::mono_font::iso_8859_13::FONT_10X20;
use embedded_graphics::prelude::DrawTarget;
use embedded_graphics::primitives::{Line, PrimitiveStyleBuilder, Rectangle, StyledDrawable};
use embedded_graphics_web_simulator::{
    display::WebSimulatorDisplay, output_settings::OutputSettingsBuilder,
};
use std::cell::RefCell;
use std::rc::Rc;
use wasm_bindgen::prelude::*;

use embedded_graphics::geometry::Dimensions;
use embedded_graphics::{
    mono_font::MonoTextStyle,
    pixelcolor::Rgb666,
    prelude::{Point, Primitive, RgbColor, Size},
    primitives::{Circle, PrimitiveStyle},
    text::Text,
    Drawable,
};
fn window() -> web_sys::Window {
    web_sys::window().expect("no global `window` exists")
}

fn request_animation_frame(f: &Closure<dyn FnMut()>) {
    window()
        .request_animation_frame(f.as_ref().unchecked_ref())
        .expect("should register `requestAnimationFrame` OK");
}
/// Converts a polar coordinate (angle/distance) into an (X, Y) coordinate centered around the
/// center of the circle.
///
/// The angle is relative to the 12 o'clock position and the radius is relative to the edge of the
/// clock face.
fn polar(circle: &Circle, angle: f32, radius_delta: i32) -> Point {
    let radius = circle.diameter as f32 / 2.0 + radius_delta as f32;
    let angle = angle + PI;
    circle.center()
        + Point::new(
            (angle.sin() * radius) as i32,
            -(angle.cos() * radius) as i32,
        )
}
// Converts an rpm into an angle in radians.
fn rpm_to_angle(rpm: u32) -> f32 {
    (rpm as f32 / 1000f32) * 2.0 * PI
}
/// Creates a centered circle for the clock face.
fn create_face(target: &impl DrawTarget) -> Circle {
    // The draw target bounding box can be used to determine the size of the display.
    let bounding_box = target.bounding_box();

    let diameter = bounding_box.size.width.min(bounding_box.size.height) - 2 * 15;

    Circle::with_center(bounding_box.center(), diameter)
}
fn render_rgb565_image<D>(
    display: &mut D,
    x0: u16,
    y0: u16,
    original_width: u16,
    screen_width: u16,
    data: &[u16],
) -> Result<(), D::Error>
where
    D: DrawTarget<Color = Rgb666>,
{
    let pixel_size = screen_width / original_width;
    let mut x = 0;
    let mut y = 0;
    for line in data.chunks_exact(original_width as usize) {
        for pixel in line {
            let point = Rectangle::new(
                Point::new(x + x0 as i32, y + y0 as i32) * pixel_size as i32,
                Size::new(pixel_size as u32, pixel_size as u32),
            );
            let color = PrimitiveStyle::with_fill(Rgb666::new(
                ((pixel & 0xF800) >> 10) as u8,
                ((pixel & 0x07E0) >> 5) as u8,
                (pixel & 0x001F << 1) as u8,
            ));
            point.draw_styled(&color, display)?;

            x += 1;
        }
        x = 0;
        y += 1;
    }
    Ok(())
}

// This is like the `main` function, except for JavaScript.
#[wasm_bindgen(start)]
pub fn main_js() -> Result<(), JsValue> {
    // This provides better error messages in debug mode.
    // It's disabled in release mode so it doesn't bloat up the file size.
    #[cfg(debug_assertions)]
    console_error_panic_hook::set_once();

    let document = web_sys::window()
        .expect("could not get window")
        .document()
        .expect("could not get document");
    let body = document.body().expect("could not get document body");

    // for simplicity reasons, this example uses `cargo-run-wasm`, which doesn't allow
    // custom html - so it's augmented here inline. In a real project, you'd likely use `trunk` instead.
    body.set_inner_html(
        r#"
    <header>
    EcoCar Sally Dashboard Preview
  </header>

  <div id="running-mode" class="display">
  <h4>Running Mode</h4>
  </div>
  
  <div id="charging-mode" class="display">
  <h4>Charging Mode</h4>
  </div>
  
  <div id="startup-mode" class="display">
  <h4>Startup Mode</h4>
  </div>

  <div id="standby-mode" class="display">
  <h4>Standby Mode</h4>
  </div>
  
  <footer>
  <p id="fps"></p>
  </footer>
    "#,
    );
    // 'nyan1', 34x21px
    let epd_bitmap_nyan1 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73,
        0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000,
        0x0000, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0x0000, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfcdf, 0xf993,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0xfcd3,
        0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xfcd3,
        0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff,
        0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
    ];
    // 'nyan2', 34x21px
    let epd_bitmap_nyan2 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73,
        0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000,
        0x0000, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff,
        0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xf993,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3,
        0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000,
        0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000,
        0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
    ];
    // 'nyan3', 34x21px
    let epd_bitmap_nyan3 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf,
        0xfcdf, 0xfe73, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0x0000, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3,
        0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000,
        0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0x0000, 0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff,
        0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff,
    ];
    // 'nyan4', 34x21px
    let epd_bitmap_nyan4 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf,
        0xfcdf, 0xfe73, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0x0000, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3,
        0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000,
        0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0x0000, 0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
        0x0000, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
    ];
    // 'nyan5', 34x21px
    let epd_bitmap_nyan5 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000,
        0x0000, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0x0000,
        0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x9cd3, 0x0000, 0xfe73, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3,
        0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000, 0x9cd3,
        0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0x9cd3, 0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff,
        0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
    ];
    // 'nyan6', 34x21px
    let epd_bitmap_nyan6 = [
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0xfe73, 0x0000, 0xffff,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfe73, 0x0000,
        0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfe73,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfe73, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xffff,
        0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xfe73, 0xfcdf,
        0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3,
        0x0000, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x0000, 0x0000, 0x9cd3, 0x9cd3,
        0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xfe73,
        0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0xfcd3,
        0xfcd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0xfcd3,
        0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000,
        0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0x9cd3,
        0xfcd3, 0xfcd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0xfe73, 0xfe73, 0xfcdf, 0xf993, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf, 0xfcdf,
        0xfcdf, 0xfcdf, 0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3, 0x9cd3,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x0000, 0x0000, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73, 0xfe73,
        0xfe73, 0xfe73, 0xfe73, 0xfe73, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0x0000, 0x9cd3, 0x9cd3, 0x9cd3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
        0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x9cd3, 0x9cd3, 0x0000, 0xffff, 0x0000,
        0x9cd3, 0x9cd3, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
        0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000,
        0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff,
        0xffff, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
    ];

    const DISPLAY_WIDTH: u32 = 480;
    const DISPLAY_HEIGHT: u32 = 320;

    let output_settings = OutputSettingsBuilder::new()
        .scale(1)
        .pixel_spacing(0)
        .build();

    let mut startup_display: WebSimulatorDisplay<Rgb666> = WebSimulatorDisplay::new(
        (DISPLAY_WIDTH, DISPLAY_HEIGHT),
        &output_settings,
        document.get_element_by_id("startup-mode").as_ref(),
    );
    let mut standby_display: WebSimulatorDisplay<Rgb666> = WebSimulatorDisplay::new(
        (DISPLAY_WIDTH, DISPLAY_HEIGHT),
        &output_settings,
        document.get_element_by_id("standby-mode").as_ref(),
    );
    let mut charging_display: WebSimulatorDisplay<Rgb666> = WebSimulatorDisplay::new(
        (DISPLAY_WIDTH, DISPLAY_HEIGHT),
        &output_settings,
        document.get_element_by_id("charging-mode").as_ref(),
    );
    let mut running_display: WebSimulatorDisplay<Rgb666> = WebSimulatorDisplay::new(
        (DISPLAY_WIDTH, DISPLAY_HEIGHT),
        &output_settings,
        document.get_element_by_id("running-mode").as_ref(),
    );

    let speed_style = SevenSegmentStyleBuilder::new()
        .digit_size(Size::new(25, 60))
        .digit_spacing(4) // 5px spacing between digits
        .segment_width(5) // 5px wide segments
        .segment_color(Rgb666::WHITE) // active segments are green
        .inactive_segment_color(Rgb666::BLACK)
        .build();
    let fill_white = PrimitiveStyle::with_fill(Rgb666::WHITE);
    let loading_style = PrimitiveStyleBuilder::new()
        .stroke_color(Rgb666::BLACK)
        .stroke_width(2)
        .fill_color(Rgb666::GREEN)
        .build();

    // let mut i = 0;
    // loop {
    //     Text::new(format!("{}", i % 100).as_str(), Point::new(200, 200), style)
    //         .draw(&mut running_display)
    //         .unwrap();
    //     i += 1;

    //     // Flush Displays
    //     startup_display.flush().expect("could not flush buffer");
    //     standby_display.flush().expect("could not flush buffer");
    //     charging_display.flush().expect("could not flush buffer");
    //     running_display.flush().expect("could not flush buffer");

    //     sleep(Duration::from_millis(20));
    // }

    // Here we want to call `requestAnimationFrame` in a loop, but only a fixed
    // number of times. After it's done we want all our resources cleaned up. To
    // achieve this we're using an `Rc`. The `Rc` will eventually store the
    // closure we want to execute on each frame, but to start out it contains
    // `None`.
    //
    // After the `Rc` is made we'll actually create the closure, and the closure
    // will reference one of the `Rc` instances. The other `Rc` reference is
    // used to store the closure, request the first frame, and then is dropped
    // by this function.
    //
    // Inside the closure we've got a persistent `Rc` reference, which we use
    // for all future iterations of the loop
    let f = Rc::new(RefCell::new(None));
    let g = f.clone();

    let mut i = 0;
    let mut tac_pos = 0f32;

    const NUM_ITER: i32 = 60;
    *g.borrow_mut() = Some(Closure::wrap(Box::new(move || {
        i += 1;
        if i > NUM_ITER {
            // Drop our handle to this closure so that it will get cleaned
            // up once we return.
            let _ = f.borrow_mut().take();
            return;
        }

        // Render Running State
        running_display.clear(Rgb666::BLACK).unwrap();

        let tac = create_face(&running_display);
        let tac_center = Circle::new(
            running_display.bounding_box().center() - Point::new(5, 5),
            10,
        );
        tac_center
            .draw_styled(&fill_white, &mut running_display)
            .unwrap();

        // Render Vehicle Speed
        Text::new(
            format!("{}", i % 100).as_str(),
            Point::new(260, 240),
            speed_style,
        )
        .draw(&mut running_display)
        .unwrap();
        // Render speed unit
        Text::new(
            "km/h",
            Point::new(320, 240),
            MonoTextStyle::new(&FONT_10X20, Rgb666::WHITE),
        )
        .draw(&mut running_display)
        .unwrap();

        // Render Tacometer
        let tac_speed = 0.07f32;
        let old_tac_stick = polar(&tac, tac_pos - tac_speed, -10);
        Line::new(tac.center(), old_tac_stick)
            .into_styled(PrimitiveStyle::with_stroke(Rgb666::BLACK, 4))
            .draw(&mut running_display)
            .unwrap();
        let tac_stick = polar(&tac, tac_pos, -10);
        Line::new(tac.center(), tac_stick)
            .into_styled(PrimitiveStyle::with_stroke(Rgb666::RED, 4))
            .draw(&mut running_display)
            .unwrap();

        // Render Tacometer Lines
        for angle in (0..8 * 100).step_by(100).map(rpm_to_angle) {
            // Start point on circumference.
            let start = polar(&tac, angle, 10);

            // End point offset by 10 pixels from the edge.
            let end = polar(&tac, angle, -12);

            Line::new(start, end)
                .into_styled(PrimitiveStyle::with_stroke(Rgb666::WHITE, 4))
                .draw(&mut running_display)
                .unwrap();
        }
        for angle in (0..7 * 100).step_by(20).map(rpm_to_angle) {
            // Start point on circumference.
            let start = polar(&tac, angle, 9);

            // End point offset by 10 pixels from the edge.
            let end = polar(&tac, angle, -5);

            Line::new(start, end)
                .into_styled(PrimitiveStyle::with_stroke(Rgb666::WHITE, 1))
                .draw(&mut running_display)
                .unwrap();
        }

        running_display.flush().expect("could not flush buffer");
        tac_pos += tac_speed;

        // Render Charging State
        charging_display.clear(Rgb666::WHITE).unwrap();
        // Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 4416)
        let nyan_frames = [
            &epd_bitmap_nyan1,
            &epd_bitmap_nyan2,
            &epd_bitmap_nyan3,
            &epd_bitmap_nyan4,
            &epd_bitmap_nyan5,
            &epd_bitmap_nyan6,
        ];
        render_rgb565_image(
            &mut charging_display,
            40,
            20,
            34,
            34 * 4,
            nyan_frames[i as usize % nyan_frames.len()],
        )
        .unwrap();
        let loading_bar = Rectangle::new(Point::new(40, 240), Size::new(360, 20));
        loading_bar
            .draw_styled(&loading_style, &mut charging_display)
            .unwrap();

        charging_display.flush().expect("could not flush buffer");

        // Schedule ourself for another requestAnimationFrame callback.
        request_animation_frame(f.borrow().as_ref().unwrap());
    }) as Box<dyn FnMut()>));

    request_animation_frame(g.borrow().as_ref().unwrap());

    Ok(())
}
